def ::= class
      | method
exp ::= literal
      | invocation
      | conditional
      | "!" exp
      | "(" exp ")"
      | sugar
sugar ::= hash | array
hash ::= "{" ((exp "=>" exp) ("," (exp "=>" exp))*)* }
array ::= "[" (exp (, exp)*)* "]"
class ::= "class" identifier (def)* "end"
method ::= "def" identifier ?("(" params ")") (exp)* "end"
literal ::= string | symbol | integer | float | "true" | "false" | "nil"
invocation ::= (exp ".")* identifier ?(args) ?(block)
params ::= (identifier(, identifier)*)*
args ::= (exp(, exp)*)*
       | "(" (exp(, exp)*)* ")"
block ::= "{" ?("|" params "|") exp* "}"
        | "do ?("|" params "|") exp* "end"
conditional ::= "if" exp (exp)* (elsif)* ?(else) "end"
              | "unless" exp (exp)* "end" 
elsif ::= "elsif" exp (exp)*
else ::= "else" (exp)*
